==18349== Memcheck, a memory error detector
==18349== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18349== Using Valgrind-3.12.0.SVN and LibVEX; rerun with -h for copyright info
==18349== Command: ./aufgabe2_test
==18349== 
Leeres String
==18349== Invalid read of size 1
==18349==    at 0x10A1D9: partition(std::vector<unsigned int, std::allocator<unsigned int> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int) (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349==    by 0x10A2C4: quickSort(std::vector<unsigned int, std::allocator<unsigned int> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int) (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349==    by 0x10A5DF: construct(std::vector<unsigned int, std::allocator<unsigned int> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349==    by 0x109FF4: test_speed() (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349==    by 0x109160: main (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349==  Address 0x5a9eb01 is 0 bytes after a block of size 100,001 alloc'd
==18349==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==18349==    by 0x4F557DB: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned long, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==18349==    by 0x109FAC: test_speed() (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349==    by 0x109160: main (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349== 
==18349== Invalid read of size 1
==18349==    at 0x10A232: partition(std::vector<unsigned int, std::allocator<unsigned int> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int) (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349==    by 0x10A2C4: quickSort(std::vector<unsigned int, std::allocator<unsigned int> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int) (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349==    by 0x10A5DF: construct(std::vector<unsigned int, std::allocator<unsigned int> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349==    by 0x109FF4: test_speed() (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349==    by 0x109160: main (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349==  Address 0x5a9eb01 is 0 bytes after a block of size 100,001 alloc'd
==18349==    at 0x4C2C21F: operator new(unsigned long) (vg_replace_malloc.c:334)
==18349==    by 0x4F557DB: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned long, char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.22)
==18349==    by 0x109FAC: test_speed() (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349==    by 0x109160: main (in /home/mi/hendriz98/Downloads/aufgabe2_test)
==18349== 
leeres Stringleeres QueryConstruction time: 155
SA Construction takes way too long. Did you compile with -O3 and are you using a real CPU :)? Are you sure you're just sorting numbers?
test_speed failed! (your implementation will be inspected)
Error count: 5 => 5 points
(if code is correctly pushed into Git and aufgabe2_main.cpp is correct as well)
==18349== 
==18349== HEAP SUMMARY:
==18349==     in use at exit: 0 bytes in 0 blocks
==18349==   total heap usage: 26 allocs, 26 frees, 1,222,425 bytes allocated
==18349== 
==18349== All heap blocks were freed -- no leaks are possible
==18349== 
==18349== For counts of detected and suppressed errors, rerun with: -v
==18349== ERROR SUMMARY: 8 errors from 2 contexts (suppressed: 0 from 0)

